<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS安装与联网</title>
    <url>/2020/03/14/CentOS%E5%AE%89%E8%A3%85%E4%B8%8E%E8%81%94%E7%BD%91/</url>
    <content><![CDATA[<h1 id="CentOS7虚拟机安装与联网"><a href="#CentOS7虚拟机安装与联网" class="headerlink" title="CentOS7虚拟机安装与联网"></a>CentOS7虚拟机安装与联网</h1><p>实验环境：VMware,CentOS7_x64</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>下载并安装VMware用于安装虚拟机，下载CentOS7镜像</p>
<h2 id="CentOS7安装"><a href="#CentOS7安装" class="headerlink" title="CentOS7安装"></a>CentOS7安装</h2><h3 id="选用安装配置类型"><a href="#选用安装配置类型" class="headerlink" title="选用安装配置类型"></a>选用安装配置类型</h3><p>选用自定义类型配置创建虚拟机</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/1.png" alt="1"></p>
<h3 id="选择下载的镜像文件"><a href="#选择下载的镜像文件" class="headerlink" title="选择下载的镜像文件"></a>选择下载的镜像文件</h3><p>单击浏览，选择自己的镜像下载到的本地的位置</p>
<p>如果提示“无法检测此光盘映像中的操作系统”可以忽略，直接下一步</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/2.png" alt="2"></p>
<h3 id="为虚拟机命名并选择安装位置"><a href="#为虚拟机命名并选择安装位置" class="headerlink" title="为虚拟机命名并选择安装位置"></a>为虚拟机命名并选择安装位置</h3><p><img src="http://q74q2iwtd.bkt.clouddn.com/3.png" alt="3"></p>
<p><strong>其他步骤使用默认配置即可</strong></p>
<h3 id="语言选择"><a href="#语言选择" class="headerlink" title="语言选择"></a>语言选择</h3><p>下拉到最底下，选择中文</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/4.png" alt="4"></p>
<h3 id="安装信息摘要"><a href="#安装信息摘要" class="headerlink" title="安装信息摘要"></a>安装信息摘要</h3><p>这里可能要稍稍等一下，如果图标上有感叹号就点进去然后点左上角完成即可</p>
<p>待所有感叹号消失就可以点击开始安装啦</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/5.png" alt="5"></p>
<h3 id="设置root用户密码"><a href="#设置root用户密码" class="headerlink" title="设置root用户密码"></a>设置root用户密码</h3><p>方便起见，我们只设置root用户，不创建新用户，以后的所有操作也都在root用户上执行</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/6.png" alt="6"></p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/7.png" alt="7"></p>
<p>设置完成后耐心等待虚拟机安装完成就好啦（根据电脑配置这里安装速度也会不同，一般会需要10-30分钟）</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/8.png" alt="8"></p>
<p>安装完成！重启开始我们的网络配置吧！</p>
<h2 id="CentOS网络配置"><a href="#CentOS网络配置" class="headerlink" title="CentOS网络配置"></a>CentOS网络配置</h2><h3 id="登录root用户"><a href="#登录root用户" class="headerlink" title="登录root用户"></a>登录root用户</h3><p>登录系统时，首先需要输入用户名，我们使用root用户登录</p>
<p>注意，当鼠标切换到虚拟机里进行操作时，108键键盘的数字区域会默认关闭，需要NUMLock手动打开哟，否则可能输入很多次“正确”密码都会显示密码错误</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/9.png" alt="9"></p>
<h3 id="配置ifcfg-ens33文件"><a href="#配置ifcfg-ens33文件" class="headerlink" title="配置ifcfg-ens33文件"></a>配置ifcfg-ens33文件</h3><p>首先切换到网络配置文件夹下,使用ls命令即可看到文件夹下所有文件</p>
<p><code>cd /etc/sysconfig/network-scripts</code></p>
<p><code>ls</code></p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/10.png" alt="10"></p>
<h4 id="Plan1"><a href="#Plan1" class="headerlink" title="Plan1."></a>Plan1.</h4><p>首先使用ip addr命令查看网卡配置项HWADDR</p>
<p><code>ip addr</code></p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/11.png" alt="11"></p>
<p>记录下这个后我们开始使用vi编辑器修改配置文件（进入时只能浏览，按i开始编辑）</p>
<p><strong>HWADDR以及后面的子网IP，子网掩码，网关IP需要根据自己虚拟机情况输入，不要直接复制粘贴</strong></p>
<p>点击VMware左上角菜单栏的编辑-虚拟网络编辑器</p>
<p>在虚拟网络编辑器中选择NAT模式这一栏，再从下面打开NAT设置，即可查看自己虚拟机的子网IP，子网掩码以及网关</p>
<p><strong>注意子网IP第四部分不能用0和1，建议使用101，然后其他虚拟机依次102，103…即可</strong></p>
<p><code>vi ifcfg-ens33</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">PROXY_METHOD&#x3D;none</span><br><span class="line">BROWSER_ONLY&#x3D;no</span><br><span class="line">BOOTPROTO&#x3D;static  &#x2F;&#x2F;修改此项</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6INIT&#x3D;yes</span><br><span class="line">IPV6_AUTOCONF&#x3D;yes</span><br><span class="line">IPV6_DEFROUTE&#x3D;yes</span><br><span class="line">IPV6_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6_ADDR_GEN_MODE&#x3D;stable-privacy</span><br><span class="line">NAME&#x3D;ens33</span><br><span class="line">UUID&#x3D;767e62e3-20e7-43dd-9268-d58142a34072</span><br><span class="line">DEVICE&#x3D;ens33</span><br><span class="line">ONBOOT&#x3D;yes	&#x2F;&#x2F;修改此项</span><br><span class="line">HWADDR&#x3D;00:0c:29:e1:9f:fd				&#x2F;&#x2F;添加此项</span><br><span class="line">IPADDR&#x3D;192.168.48.101		&#x2F;&#x2F;添加此项，为子网IP</span><br><span class="line">NETMASK&#x3D;255.255.255.0		&#x2F;&#x2F;添加此项，为子网掩码</span><br><span class="line">GATEWAY&#x3D;192.168.48.2		&#x2F;&#x2F;添加此项，为网关IP</span><br><span class="line">DNS1&#x3D;8.8.8.8		&#x2F;&#x2F;添加此项</span><br><span class="line">DNS2&#x3D;8.8.8.4.4		&#x2F;&#x2F;添加此项</span><br></pre></td></tr></table></figure>

<p>修改完后保存并退出vi编辑器（先按ESC，然后输入<code>:wq</code>，最后按回车即可保存退出）</p>
<p>修改后我们重启一下网络服务</p>
<p><code>service network restart</code></p>
<p><strong>如果该方法配置完后依然无法联网，我们再使用方法2配置</strong></p>
<h4 id="Plan2"><a href="#Plan2" class="headerlink" title="Plan2."></a>Plan2.</h4><p>按上述方法进入虚拟网络编辑器</p>
<p>点击最下面的更改设置，弹框选择是，使用管理员权限开始重新配置</p>
<p>首先还原默认设置，还原完成后取消使用本地DHCP服务，然后将子网IP修改为<code>192.168.48.0</code></p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/12.png" alt="12"></p>
<p>接着我们和上面一样使用vi编辑器修改ifcfg-ens33配置文件（进入时只能浏览，按i开始编辑）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">PROXY_METHOD&#x3D;none</span><br><span class="line">BROWSER_ONLY&#x3D;no</span><br><span class="line">BOOTPROTO&#x3D;static	&#x2F;&#x2F;修改此项</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6INIT&#x3D;yes</span><br><span class="line">IPV6_AUTOCONF&#x3D;yes</span><br><span class="line">IPV6_DEFROUTE&#x3D;yes</span><br><span class="line">IPV6_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6_ADDR_GEN_MODE&#x3D;stable-privacy</span><br><span class="line">NAME&#x3D;ens33</span><br><span class="line">UUID&#x3D;767e62e3-20e7-43dd-9268-d58142a34072</span><br><span class="line">DEVICE&#x3D;ens33</span><br><span class="line">ONBOOT&#x3D;yes		&#x2F;&#x2F;修改此项</span><br><span class="line">NM_CONTROLLED&#x3D;no	&#x2F;&#x2F;添加此项</span><br><span class="line">IPV6_PRIVACY&#x3D;no		&#x2F;&#x2F;添加此项</span><br><span class="line">IPADDR&#x3D;192.168.48.101	&#x2F;&#x2F;添加子网IP</span><br><span class="line">NETMASK&#x3D;255.255.255.0	&#x2F;&#x2F;添加子网掩码</span><br><span class="line">GATEWAY&#x3D;192.168.48.2	&#x2F;&#x2F;添加网关IP</span><br></pre></td></tr></table></figure>

<p>修改完后保存并退出vi编辑器（先按ESC，然后输入<code>:wq</code>，最后按回车即可保存退出）</p>
<p>接着我们修改DNS地址</p>
<p><code>cd /root</code></p>
<p><code>vi /etc/resolv.conf</code></p>
<p>先将文件内本来有的内容删除，然后写入：</p>
<p><code>nameserver 114.114.114.114</code></p>
<p>修改后我们重启一下网络服务</p>
<p><code>service network restart</code></p>
<h3 id="测试网络是否配置成功"><a href="#测试网络是否配置成功" class="headerlink" title="测试网络是否配置成功"></a>测试网络是否配置成功</h3><p>重启完网络服务后，我们使用ping命令测试网络是否配置成功</p>
<p><code>ping www.baidu.com</code></p>
<p>如果显示如下内容成功返回数据，说明网络配置成功</p>
<p><img src="http://q74q2iwtd.bkt.clouddn.com/13.png" alt="13"></p>
<p>如果显示</p>
<p><code>ping:www.baidu.com:Name or service not known</code></p>
<p>说明配置存在问题，请参考前面步骤检查问题（很有可能是resolv.conf没有修改完成（修改完应该只有一行<code>nameserver 114.114.114.114</code>））</p>
]]></content>
      <tags>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop伪分布式搭建</title>
    <url>/2020/03/14/Hadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="Hadoop伪分布式搭建"><a href="#Hadoop伪分布式搭建" class="headerlink" title="Hadoop伪分布式搭建"></a>Hadoop伪分布式搭建</h1><p>实验环境：VMware,CentOS7_x64,</p>
]]></content>
      <tags>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>win10在VScode上配置C/C++环境</title>
    <url>/2020/03/13/VSC++%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="win10-VScode配置C-C-环境"><a href="#win10-VScode配置C-C-环境" class="headerlink" title="win10 VScode配置C/C++环境"></a>win10 VScode配置C/C++环境</h1><h2 id="一、下载需要的工具"><a href="#一、下载需要的工具" class="headerlink" title="一、下载需要的工具"></a>一、下载需要的工具</h2><p><strong>1.下载VScode</strong></p>
<p><strong>2.安装cpptools工具</strong><br>打开VScode，按照以下步骤安装<br><img src="https://s2.ax1x.com/2020/03/08/3zTZi6.png" alt="1.png"><br><strong>3.安装code runner工具</strong><br>在VScode中编译文件，结束后并不会像我们经常使用的IDE一样，终端会停留在面前然后告诉你“按任意键继续”，在VScode中，编译运行完成后往往cmd会一闪而过，然后直接：<br>The program ‘d:\MinGW\Projicts\test\test.exe’ has exited with code 0 (0x00000000).  </p>
<a id="more"></a>
<p>这个时候我们往往会使用在结束的return语句前加上<strong>getchar()</strong> 或<br> <strong>system(“pause”)（注意：使用这个的时候需要加上头文件#include&lt;stdlib.h&gt;）</strong>     </p>
<p>我们可以使用code runner工具来解决这个问题<br>首先和上面一样 找到这个插件并安装它     </p>
<p><img src="https://s2.ax1x.com/2020/03/08/3zT8ot.png" alt="2.png"></p>
<p>然后在如下打开界面中    </p>
<p><img src="https://s2.ax1x.com/2020/03/08/3zTJFP.png" alt="3.png"></p>
<p>选择<br><img src="https://s2.ax1x.com/2020/03/08/3zTdyQ.png" alt="4.png"> </p>
<p>以及</p>
<p><img src="https://s2.ax1x.com/2020/03/08/3zTBes.png" alt="5.png"></p>
<p>即可<br>这样我们编译运行的文件使用code runner运行就会如下图<br><img src="https://s2.ax1x.com/2020/03/08/3zTyF0.png" alt="6.png"><br>这样就和我们平时使用的IDE一样啦     </p>
<p><strong>4.下载MinGW</strong><br>下载地址：<a href="https://sourceforge.net/projects/mingw-w64/files/" target="_blank" rel="noopener">https://sourceforge.net/projects/mingw-w64/files/</a><br>下载的文件：进入网站后不要点击 “Download Lasted Version”，往下滑，找到最新版的 “x86_64-posix-seh”。<br>安装MinGW：下载后是一个7z的压缩包，解压后移动到你想安装的位置即可。</p>
<h2 id="二、配置环境变量"><a href="#二、配置环境变量" class="headerlink" title="二、配置环境变量"></a>二、配置环境变量</h2><p><strong>配置环境变量</strong><br>配置对象：WinGW，所以把你刚刚安装WinGW的路径拷贝一下<br>右键点击此电脑 → 属性 → 高级系统设置 → 环境变量 → 双击系统变量Path → 新建 → 复制你的MinGW安装路径的bin文件夹<br>例如我的是：D:\MinGW\mingw64\bin<br><strong>记得每一步都要点确定</strong><br>配置完成后我们使用命令行检验一下是否配置成功<br>win+R 输入cmd后回车打开命令行，输入g++ -v<br>出现下图界面说明配置成功<br><img src="https://s2.ax1x.com/2020/03/08/3zTWy4.png" alt="7.png"></p>
<h2 id="三、开始配置C-环境"><a href="#三、开始配置C-环境" class="headerlink" title="三、开始配置C++环境"></a>三、开始配置C++环境</h2><p><strong>1.创建一个c/cpp文件</strong><br>首先随便打开或者新建一个文件夹 然后在文件夹里创建一个c或cpp文件</p>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    std::cout&lt;&lt;&quot;Hello World&quot;&lt;&lt;std::endl;</span><br><span class="line">    getchar();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>2.修改launch.json 配置文件</strong><br>进入调试界面添加配置环境，选择 C++(GDB/LLDB)，再选择 g++.exe，之后会自动生成 launch.json 配置文件<br><img src="https://s2.ax1x.com/2020/03/08/3zTIT1.png" alt="8.png"><br><img src="https://s2.ax1x.com/2020/03/08/3zTHfK.png" alt="9.png"></p>
<p>编辑 launch.json 配置文件</p>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;name&quot;: &quot;g++.exe build and debug active file&quot;,</span><br><span class="line">        &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">        &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">        &quot;program&quot;: &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,</span><br><span class="line">        &quot;args&quot;: [],</span><br><span class="line">        &quot;stopAtEntry&quot;: false,</span><br><span class="line">        &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">        &quot;environment&quot;: [],</span><br><span class="line">        &quot;externalConsole&quot;: true,   &#x2F;&#x2F;修改此项，让其弹出终端</span><br><span class="line">        &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">        &quot;miDebuggerPath&quot;: &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;gdb.exe&quot;,</span><br><span class="line">        &quot;setupCommands&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,</span><br><span class="line">            &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">            &quot;ignoreFailures&quot;: true</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;preLaunchTask&quot;: &quot;task g++&quot;  &#x2F;&#x2F;修改此项</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>3.修改tasks.json文件</strong><br>返回.cpp文件，按F5进行调试，会弹出找不到任务”task g++”，选择 “配置任务”，会自动生成 tasks.json 文件编辑 tasks.json 文件</p>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class="line">    &quot;tasks&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">        &quot;label&quot;: &quot;task g++&quot;,  &#x2F;&#x2F;修改此项</span><br><span class="line">        &quot;command&quot;: &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;g++.exe&quot;,</span><br><span class="line">        &quot;args&quot;: [</span><br><span class="line">          &quot;-g&quot;,</span><br><span class="line">          &quot;$&#123;file&#125;&quot;,</span><br><span class="line">          &quot;-o&quot;,</span><br><span class="line">          &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;options&quot;: &#123;</span><br><span class="line">          &quot;cwd&quot;: &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;problemMatcher&quot;: [</span><br><span class="line">          &quot;$gcc&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;group&quot;: &quot;build&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>4.修改c_cpp_properties.json配置文件</strong><br>这个时候运行，会报错”includepath”设置问题<br>我们需要新建一个c_cpp_properties.json配置文件</p>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Win32&quot;,</span><br><span class="line">            &quot;includePath&quot;: [</span><br><span class="line">                &quot;$&#123;workspaceRoot&#125;&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;x86_64-w64-mingw32&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;backward&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include-fixed&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;x86_64-w64-mingw32&#x2F;include&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;defines&quot;: [</span><br><span class="line">                &quot;_DEBUG&quot;,</span><br><span class="line">                &quot;UNICODE&quot;,</span><br><span class="line">                &quot;__GNUC__&#x3D;6&quot;,</span><br><span class="line">                &quot;__cdecl&#x3D;__attribute__((__cdecl__))&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;intelliSenseMode&quot;: &quot;msvc-x64&quot;,</span><br><span class="line">            &quot;browse&quot;: &#123;</span><br><span class="line">                &quot;limitSymbolsToIncludedHeaders&quot;: true,</span><br><span class="line">                &quot;databaseFilename&quot;: &quot;&quot;,</span><br><span class="line">                &quot;path&quot;: [</span><br><span class="line">                &quot;$&#123;workspaceRoot&#125;&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;x86_64-w64-mingw32&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;backward&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include-fixed&quot;,</span><br><span class="line">                &quot;D:&#x2F;MinGW&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;x86_64-w64-mingw32&#x2F;include&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;version&quot;: 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>记得把路径修改为你自己的路径<br>查找自己路径方法为打开cmd 输入:<br><strong>gcc -v -E -x c++ -</strong><br><img src="https://s2.ax1x.com/2020/03/08/3zTvmd.png" alt="10.png"><br>修改后保存即可</p>
<p><strong>5.运行文件</strong><br>这个时候我们已经配置完成啦<br>可以开始运行我们刚才创建的测试代码啦<br>F5：VScode调试<br>CTRL+ALT+N:code runner调试<br><img src="https://s2.ax1x.com/2020/03/08/3zTzTI.png" alt="11.png"><br><img src="https://s2.ax1x.com/2020/03/08/3z7ut0.png" alt="12.png"></p>
<h2 id="至此，整个配置就完成啦"><a href="#至此，整个配置就完成啦" class="headerlink" title="至此，整个配置就完成啦"></a>至此，整个配置就完成啦</h2><p>注：<br>为什么不直接用VisualStudio?<br>1.太大啦，只安一个C++环境就要少说1G，完整部件安装差不多10G就没了<br>2.VS使用的VSC++，很多C++支持的功能VC都不支持，所以我们选择从Linux GCC移植过来的MinGW（建议学习C/C++尽量使用gcc编译器，clang好像也不错，<strong>建议不要使用</strong>万恶之源：VC++6</p>
]]></content>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
